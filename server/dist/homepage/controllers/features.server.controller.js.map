{"version":3,"sources":["../../../src/homepage/controllers/features.server.controller.js"],"names":["Feature","model","featureControls","getAll","find","error","docs","length","insertMany","title","icon","points","text","res","send","features","edit","req","params","featureId","findByIdAndUpdate","id","body","console","log"],"mappings":"oEAAA,+E,wEACA,GAAMA,SAAU,mBAASC,KAAT,CAAe,SAAf,CAAhB,CAEMC,gBAAkB,CACpBC,OAAS,oBAAc,CAEnBH,QAAQI,IAAR,CAAa,aAAqB,CAC9B,GAAGC,CAAH,CAAU,MAAOA,EAAP,CAEV,GAAG,CAACC,EAAKC,MAAT,CAAgB,CAkCZP,QAAQQ,UAAR,CAhCsB,CAClB,CACIC,MAAO,yBADX,CAEIC,KAAM,UAFV,CAGIC,OAAQ,CACJ,CAAEC,KAAM,sCAAR,CADI,CAEJ,CAAEA,KAAM,yEAAR,CAFI,CAGJ,CAAEA,KAAM,+CAAR,CAHI,CAIJ,CAAEA,KAAM,uCAAR,CAJI,CAHZ,CADkB,CAWlB,CACIH,MAAO,mBADX,CAEIC,KAAM,cAFV,CAGIC,OAAQ,CACJ,CAAEC,KAAM,oGAAR,CADI,CAEJ,CAAEA,KAAM,8CAAR,CAFI,CAGJ,CAAEA,KAAM,kCAAR,CAHI,CAIJ,CAAEA,KAAM,6CAAR,CAJI,CAHZ,CAXkB,CAqBlB,CACIH,MAAO,gBADX,CAEIC,KAAM,QAFV,CAGIC,OAAQ,CACJ,CAAEC,KAAM,oEAAR,CADI,CAEJ,CAAEA,KAAM,sEAAR,CAFI,CAGJ,CAAEA,KAAM,sCAAR,CAHI,CAHZ,CArBkB,CAgCtB,CAAoC,aAAiB,CACjDC,EAAIC,IAAJ,CAAS,CAACC,SAAUT,CAAX,CAAT,CACH,CAFD,CAGH,CArCD,IAsCKO,GAAIC,IAAJ,CAAS,CAACC,SAAUT,CAAX,CAAT,CACR,CA1CD,CA2CH,CA9CmB,CA+CpBU,KAAO,kBAAc,CAEjB,GAAM,GAAKC,EAAIC,MAAJ,CAAWC,SAAtB,CAEAnB,QAAQoB,iBAAR,CAA0BC,CAA1B,CAA8BJ,EAAIK,IAAlC,CAAwC,WAAe,CACnDjB,CADmD,EAC5CkB,QAAQC,GAAR,CAAYnB,CAAZ,CAD4C,CAGtDQ,EAAIC,IAAJ,CAAS,iBAAT,CACA,CAJD,CAKH,CAxDmB,CAFxB,C,gBA6DeZ,e","file":"features.server.controller.js","sourcesContent":["import mongoose from 'mongoose';\nconst Feature = mongoose.model('Feature');\n\nconst featureControls = {\n    getAll : (req, res) => {\n        // Fetch all sliders\n        Feature.find(function(error, docs){\n            if(error) return(error);\n\n            if(!docs.length){\n                // Create default slider instances if no docs are returned\n                let defaultFeatures = [\n                    {\n                        title: 'Virtual Spaces / Groups',\n                        icon: 'fa-users',\n                        points: [\n                            { text: \"Groups are commodities from PCAARRD.\" },\n                            { text: \"Groups are classified by industry, sector, ISP, and specific commodity.\" },\n                            { text: \"Group members can react and comment on posts.\" },\n                            { text: \"Group members can read private posts.\"}\n                        ]\n                    },\n                    {\n                        title: 'Categorized Posts',\n                        icon: 'fa-file-text',\n                        points: [\n                            { text: \"Posts are categorized by Question, Incident Report, Event, Media, Advertisement, News, and Others.\" },\n                            { text: \"Post's input fields depend on its category.\" },\n                            { text: \"Posts can be viewed by category.\" },\n                            { text: \"Posts analysis in every group is displayed.\" }\n                        ]\n                    },\n                    {\n                        title: 'Community Feed',\n                        icon: 'fa-rss',\n                        points: [\n                            { text: \"Community Feed is composed of latest posts from the joined groups.\" },\n                            { text: \"Community Feed allows reacting to posts without going to the groups.\" },\n                            { text: \"Community Feed is always up-to-date.\" }\n                        ]\n                    }\n                ];\n\n                Feature.insertMany(defaultFeatures, (error, docs) => {\n                    res.send({features: docs})\n                });\n            }\n            else res.send({features: docs});\n        });\n    },\n    edit : (req, res) => {\n        // Update a slider\n        const id = req.params.featureId;\n\n        Feature.findByIdAndUpdate(id, req.body, function(error){\n        \tif(error) console.log(error);\n\n        \tres.send(\"Feature updated\");\n        });\n    }\n}\n\nexport default featureControls;\n"]}