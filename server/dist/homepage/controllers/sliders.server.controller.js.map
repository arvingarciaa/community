{"version":3,"sources":["../../../src/homepage/controllers/sliders.server.controller.js"],"names":["fs","require","Slider","model","sliderControls","getAll","find","error","docs","length","insertMany","backgroundImage","caption","title","description","actionButton","shouldUse","text","sref","order","res","send","sliders","edit","req","params","sliderId","findById","id","result","body","oldFilename","newFilename","unlink","console","log","findByIdAndUpdate","delete","filename","findByIdAndRemove","status"],"mappings":"oEAAA,+E,wEAEA,GAAMA,IAAKC,QAAQ,IAAR,CAAX,CACMC,OAAS,mBAASC,KAAT,CAAe,QAAf,CADf,CAGMC,eAAiB,CACnBC,OAAS,oBAAc,CAEnBH,OAAOI,IAAP,CAAY,aAAqB,CAC7B,GAAGC,CAAH,CAAU,MAAOA,EAAP,CAEV,GAAG,CAACC,EAAKC,MAAT,CAAiB,CA4CbP,OAAOQ,UAAP,CA1CqB,CACjB,CACIC,gBAAiB,qCADrB,CAEIC,QAAS,CACLC,MAAO,kBADF,CAELC,YAAa,mGAFR,CAGLC,aAAa,CACTC,YADS,CAETC,KAAM,EAFG,CAGTC,KAAM,EAHG,CAHR,CAFb,CAWIC,MAAO,CAXX,CADiB,CAcjB,CACIR,gBAAiB,qDADrB,CAEIC,QAAS,CACLC,MAAO,kBADF,CAELC,YAAa,sHAFR,CAGLC,aAAa,CACTC,YADS,CAETC,KAAM,YAFG,CAGTC,KAAM,QAHG,CAHR,CAFb,CAWIC,MAAO,CAXX,CAdiB,CA2BjB,CACIR,gBAAiB,sDADrB,CAEIC,QAAS,CACLC,MAAO,yBADF,CAELC,YAAa,uHAFR,CAGLC,aAAa,CACTC,YADS,CAETC,KAAM,UAFG,CAGTC,KAAM,UAHG,CAHR,CAFb,CAWIC,MAAO,CAXX,CA3BiB,CA0CrB,CAAkC,aAAiB,CAC/CC,EAAIC,IAAJ,CAAS,CAACC,QAASd,CAAV,CAAT,CACH,CAFD,CAGH,CA/CD,IAgDKY,GAAIC,IAAJ,CAAS,CAACC,QAASd,CAAV,CAAT,CACR,CApDD,CAqDH,CAxDkB,CAyDnBe,KAAO,kBAAc,CAEjB,GAAM,GAAKC,EAAIC,MAAJ,CAAWC,QAAtB,CAGAxB,OAAOyB,QAAP,CAAgBC,CAAhB,CAAoB,aAAuB,CACvC,GAAM,GAAcC,EAAOlB,eAA3B,CACM,EAAca,EAAIM,IAAJ,CAASnB,eAD7B,CAGGoB,IAAgBC,CAJoB,EAKnChC,GAAGiC,MAAH,cAAuBF,CAAvB,CAAsC,WAAW,OAC1CxB,EAD0C,KAEzC2B,SAAQ3B,KAAR,CAAcA,CAAd,CAFyC,KAM7C2B,SAAQC,GAAR,mCAA8CJ,CAA9C,CACH,CAPD,CASP,CAdD,CALiB,CAsBjB7B,OAAOkC,iBAAP,CAAyBR,CAAzB,CAA6BJ,EAAIM,IAAjC,CAAuC,WAAe,CAClDvB,CADkD,EAC3C2B,QAAQC,GAAR,CAAY5B,CAAZ,CAD2C,CAGrDa,EAAIC,IAAJ,CAAS,gBAAT,CACA,CAJD,CAKH,CApFkB,CAqFnBgB,OAAS,qBAAc,CAEnB,GAAM,GAAKb,EAAIC,MAAJ,CAAWC,QAAtB,CAGAxB,OAAOyB,QAAP,CAAgBC,CAAhB,CAAoB,aAAuB,CACvC,GAAM,GAAWC,EAAOlB,eAAxB,CAEAX,GAAGiC,MAAH,cAAuBK,CAAvB,CAAmC,WAAW,OACvC/B,EADuC,KAEtC2B,SAAQ3B,KAAR,CAAcA,CAAd,CAFsC,KAM1C2B,SAAQC,GAAR,mCAA8CG,CAA9C,CACH,CAPD,CAQH,CAXD,CALmB,CAmBnBpC,OAAOqC,iBAAP,CAAyBX,CAAzB,CAA6B,aAAuB,CACnD,GAAGrB,CAAH,CAAU,MAAQA,EAAR,CADyC,MAE/B,KAAX,IAF0C,CAElBa,EAAIoB,MAAJ,CAAW,GAAX,EAAgBnB,IAAhB,CAAqB,mBAArB,CAFkB,KAInDD,GAAIC,IAAJ,CAAS,iBAAT,CACA,CALD,CAMH,CA9GkB,CAHvB,C,gBAoHejB,c","file":"sliders.server.controller.js","sourcesContent":["import mongoose from 'mongoose';\n\nconst fs = require('fs');\nconst Slider = mongoose.model('Slider');\n\nconst sliderControls = {\n    getAll : (req, res) => {\n        // Fetch all sliders\n        Slider.find(function(error, docs){\n            if(error) return(error);\n\n            if(!docs.length) {\n                // Create default slider instances if no docs are returned\n                let defaultSliders = [\n                    {\n                        backgroundImage: '/groups/assets/images/community.jpg',\n                        caption: {\n                            title: 'Strong Community',\n                            description: 'Build an interactive and solid community driven by purpose, and united in achieving common goals.',\n                            actionButton:{\n                                shouldUse: false,\n                                text: '',\n                                sref: ''\n                            }\n                        },\n                        order: 1\n                    },\n                    {\n                        backgroundImage: '/groups/assets/images/fruits-vegetables-collage.jpg',\n                        caption: {\n                            title: 'Plenty of Groups',\n                            description: 'Many groups under crops, livestocks, and many more are there to fulfill your interests. You can join in any of them.',\n                            actionButton:{\n                                shouldUse: true,\n                                text: 'See Groups',\n                                sref: 'groups'\n                            }\n                        },\n                        order: 2\n                    },\n                    {\n                        backgroundImage: '/groups/assets/images/engage-people-conversation.jpg',\n                        caption: {\n                            title: 'Limitless Conversations',\n                            description: 'Engage in learning conversations with other people within your groups. Always try to post something nice and helpful.',\n                            actionButton:{\n                                shouldUse: true,\n                                text: 'Join Now',\n                                sref: 'register'\n                            }\n                        },\n                        order: 3\n                    }\n                ];\n\n                Slider.insertMany(defaultSliders, (error, docs) => {\n                    res.send({sliders: docs})\n                });\n            }\n            else res.send({sliders: docs});\n        });\n    },\n    edit : (req, res) => {\n        // Update a slider\n        const id = req.params.sliderId;\n\n        // Delete old file if there is a new file uploaded\n        Slider.findById(id, function(error, result){\n            const oldFilename = result.backgroundImage;\n            const newFilename = req.body.backgroundImage;\n\n            if(oldFilename !== newFilename){\n                fs.unlink(`./uploads/${oldFilename}`, (error) => {\n                    if(error){\n                        console.error(error);\n                        return;\n                    }\n\n                    console.log(`Successfully deleted ./uploads/${oldFilename}`);\n                });\n            }\n        });\n\n        // Then update document in MongoDB\n        Slider.findByIdAndUpdate(id, req.body, function(error){\n        \tif(error) console.log(error);\n\n        \tres.send(\"Slider updated\");\n        });\n    },\n    delete : (req, res) => {\n        // Delete a slider\n        const id = req.params.sliderId;\n\n        // Delete file in filesystem first\n        Slider.findById(id, function(error, result){\n            const filename = result.backgroundImage;\n\n            fs.unlink(`./uploads/${filename}`, (error) => {\n                if(error){\n                    console.error(error);\n                    return;\n                }\n\n                console.log(`Successfully deleted ./uploads/${filename}`);\n            });\n        });\n\n        // Then delete document in MongoDB\n        Slider.findByIdAndRemove(id, function(error, result){\n        \tif(error) return (error);\n        \telse if (result === null) return res.status(404).send('Slider not found!');\n\n        \tres.send(\"Slider deleted.\");\n        });\n    }\n}\n\nexport default sliderControls;\n"]}