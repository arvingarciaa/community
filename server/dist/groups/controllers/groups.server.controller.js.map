{"version":3,"sources":["../../../src/groups/controllers/groups.server.controller.js"],"names":["groupControls","list","find","err","res","send","groups","results","listByMyGroups","req","params","userID","findOne","_id","status","handle","$in","result","groupsJoined","listByDiscoverGroups","$nin","listSome","handles","split","listAdministeredGroups","admin","listPendingGroups","pendingMembers","listByGroupSearch","query","name","description","technology","distinct","technologyHandles","listOne","group","post","body","save","updateOne","findOneAndUpdate","$set","removeOne","findOneAndRemove","addAdmin","$addToSet","removeAdmin","$pull","addToPendingMembers","removeFromPendingMembers"],"mappings":"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","file":"groups.server.controller.js","sourcesContent":["import Group from '../models/groups.server.model';\nimport Post from '../../posts/models/posts.server.model';\nimport User from '../../users/models/users.server.model';\n\nconst groupControls = { \n\tlist : (req, res) => {\t// get all groups\n\t\tGroup.find((err, results) => {\n\t        if (err) { return (err); }\n\n\t        res.send({ groups: results });\n\t    });\n\t},\n\tlistByMyGroups : (req, res) => {\t// get groups joined by user\n\t    const userID = req.params.userID;\n\n\t\tUser.findOne({_id: userID}, (err, result) => {\n\t\t\tif (err) { \n\t\t\t\treturn (err);  \n\t\t\t} else if (result === null) {\n\t\t\t\treturn res.status(404).send('User not found!');\n\t\t\t}\n\n\t\t\tGroup.find({handle: {$in: result.groupsJoined}}, (err, results) => {\n\t\t        if (err) { return (err); }\n\n\t\t        res.send({ groups: results });\n\t\t    });\n\t\t});\n\t},\n\tlistByDiscoverGroups : (req, res) => {\t// get groups not joined by user\n\t\tconst userID = req.params.userID;\n\n\t\tUser.findOne({_id: userID}, (err, result) => {\n\t\t\tif (err) { \n\t\t\t\treturn (err);  \n\t\t\t} else if (result === null) {\n\t\t\t\treturn res.status(404).send('User not found!');\n\t\t\t}\n\n\t\t\tGroup.find({handle: {$nin: result.groupsJoined}}, (err, results) => {\n\t\t        if (err) { return (err); }\n\n\t\t        res.send({ groups: results });\n\t\t    });\n\t\t});\n\t},\n\tlistSome : (req, res) => {\t// get all groups details of given group handles\n\t\tconst handles = req.params.handles.split(',');\n\n\t\tGroup.find({handle: {$in: handles}}, (err, results) => {\n\t\t\tif (err) { return (err); }\n\n\t\t    res.send({groups: results });\n\t\t});\n\t},\n\tlistAdministeredGroups  : (req, res) => {\t// get all administered groups of user\n\t\tGroup.find({admin: req.params.userID}, (err, results) => {\n\t\t\tif (err) { return (err); }\n\n\t\t    res.send({groups: results });\n\t\t});\n\t},\n\tlistPendingGroups  : (req, res) => {\t// get all pending groups of user\n\t\tGroup.find({pendingMembers: req.params.userID}, (err, results) => {\n\t\t\tif (err) { return (err); }\n\n\t\t    res.send({groups: results });\n\t\t});\n\t},\n\tlistByGroupSearch: (req, res) => {\t// using query, search groups by name, description or tech handle used in posts (e.g. ../all?name=banana)\n\t\tlet query = {};\n\n\t\tif (req.query.name){\n\t\t\tquery.name = { \"$regex\": `^${req.query.name}$`, \"$options\": \"i\"};\n\t\t} \n\n\t\tif (req.query.description){\n\t\t\tquery.description = { \"$regex\": `\\\\b${req.query.description}\\\\b`, \"$options\": \"i\"};\n\t\t}\n\n\t\tif (req.query.technology){\n\t\t\tPost.distinct(\"groupBelonged\", {technologyHandles: { \"$regex\": `^${req.query.technology}$`, \"$options\": \"i\"}}, (err, results) => {\n\t\t        if (err) { return (err); }\n\n\t\t        query.handle = {\"$in\": results};\n\t\t        \n\t\t        Group.find(query, (err, results) => {\n\t\t\t        if (err) { return (err); }\n\n\t\t\t        res.send({ groups: results });\n\t\t\t    });\n\t\t    });\n\t\t} else {\n\t\t\tGroup.find(query, (err, results) => {\n\t\t        if (err) { return (err); }\n\n\t\t        res.send({ groups: results });\n\t\t    });\n\t\t}\n\t},\n\tlistOne : (req, res) => {\t// get one group\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOne({handle}, (err, result) => {\n\t\t\tif (err) { \n\t\t\t\treturn (err);  \n\t\t\t} else if (result === null) {\n\t\t\t\treturn res.status(404).send('Group not found!');\n\t\t\t}\n\t\t\t\n\t\t\tres.send({group: result});\n\t\t});\n\t},\n\tpost : (req, res) => {\t// post one group\n\t\tconst group = new Group(req.body);\n\t\tgroup.save((err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send('Group saved.');\n\t\t});\n\t},\n\tupdateOne : (req, res) => {\t// modify one group\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndUpdate({handle}, { $set: req.body }, (err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group updated.\");\n\t\t});\n\t},\n\tremoveOne : (req, res) => {\t// delete one group\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndRemove({handle}, (err, result) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group deleted.\");\n\t\t});\n\t},\n\taddAdmin : (req, res) => {\t// add one admin to group\n\t\tconst userID = req.params.userID;\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndUpdate({handle}, { $addToSet: {admin: userID}}, (err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group added an admin.\");\n\t\t});\n\t},\n\tremoveAdmin : (req, res) => {\t// remove one admin to group\n\t\tconst userID = req.params.userID;\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndUpdate({handle}, { $pull: {admin: userID}}, (err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group removed an admin.\");\n\t\t});\n\t},\n\taddToPendingMembers : (req, res) => {\t// add one pending member to group\n\t\tconst userID = req.params.userID;\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndUpdate({handle}, { $addToSet: {pendingMembers: userID}}, (err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group added a pending member.\");\n\t\t});\n\t},\n\tremoveFromPendingMembers : (req, res) => {\t// remove one pending member to group\n\t\tconst userID = req.params.userID;\n\t\tconst handle = req.params.handle;\n\n\t\tGroup.findOneAndUpdate({handle}, { $pull: {pendingMembers: userID}}, (err) => {\n\t\t\tif (err) { return (err); }\n\n\t\t\tres.send(\"Group removed a pending member.\");\n\t\t});\n\t},\n}\n\nexport default groupControls;\n"]}